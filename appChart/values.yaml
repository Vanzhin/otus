# Default values for app_chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 6

image:
  repository: vanzhin/my-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.1

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  name: kuber-ingress
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "arch.homework"
      http:
      paths:
        - path: /()(.*)
          pathType: ImplementationSpecific
        - path: /otusapp/\w+(/|$)(.*)
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 15 # время в секундах до первого теста
  periodSeconds: 30 # время в секундах периода, через которое выполняется проверка
  successThreshold: 1 # кол-во попыток для успеха
  failureThreshold: 3 # кол-во попыток для провала
  timeoutSeconds: 5 # время сколько ждет отклика
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: [ ]
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: [ ]
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: { }

tolerations: [ ]

affinity: { }

postgresql:
  enabled: true
  fullnameOverride: "app-postgresql"
  global:
    postgresql:
      auth:
        username: postgres
        password: password
        database: database_app
      service:
        port: "5432"
